@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager

@{
    var user = UserManager.GetUserAsync(User).Result;
    var isSubscribed = user?.IsSubscribed ?? false;
}



<div class="col-12 col-xl-4">
    <div class="card h-100">
        <div class="card-header pb-0 p-3">
            <h6 class="mb-0">Platform Ayarları</h6>
        </div>
        <div class="card-body p-3">
            <h6 class="text-uppercase text-body text-xs font-weight-bolder">Hesap</h6>
            <ul class="list-group">
                <li class="list-group-item border-0 px-0">
                    <div class="form-check form-switch ps-0">
                        <input class="form-check-input ms-auto" type="checkbox" id="flexSwitchCheckDefault" checked>
                        <label class="form-check-label text-body ms-3 text-truncate w-80 mb-0" for="flexSwitchCheckDefault">Biri beni takip ettiğinde e-posta gönder</label>
                    </div>
                </li>
                <li class="list-group-item border-0 px-0">
                    <div class="form-check form-switch ps-0">
                        <input class="form-check-input ms-auto" type="checkbox" id="flexSwitchCheckDefault1">
                        <label class="form-check-label text-body ms-3 text-truncate w-80 mb-0" for="flexSwitchCheckDefault1">Biri gönderime cevap verdiğinde e-posta gönder</label>
                    </div>
                </li>
                <li class="list-group-item border-0 px-0">
                    <div class="form-check form-switch ps-0">
                        <input class="form-check-input ms-auto" type="checkbox" id="flexSwitchCheckDefault2" checked>
                        <label class="form-check-label text-body ms-3 text-truncate w-80 mb-0" for="flexSwitchCheckDefault2">Biri beni etiketlediğinde e-posta gönder</label>
                    </div>
                </li>
            </ul>
            <h6 class="text-uppercase text-body text-xs font-weight-bolder mt-4">Uygulama</h6>
            <ul class="list-group">
                <li class="list-group-item border-0 px-0">
                    <div class="form-check form-switch ps-0">
                        <input class="form-check-input ms-auto" type="checkbox" id="flexSwitchCheckDefault3">
                        <label class="form-check-label text-body ms-3 text-truncate w-80 mb-0" for="flexSwitchCheckDefault3">Yeni lansmanlar ve projeler</label>
                    </div>
                </li>
                <li class="list-group-item border-0 px-0">
                    <div class="form-check form-switch ps-0">
                        <input class="form-check-input ms-auto" type="checkbox" id="flexSwitchCheckDefault4" checked>
                        <label class="form-check-label text-body ms-3 text-truncate w-80 mb-0" for="flexSwitchCheckDefault4">Aylık ürün güncellemeleri</label>
                    </div>
                </li>
                <li class="list-group-item border-0 px-0 pb-0">
                    <div class="form-check form-switch ps-0">
                        <input class="form-check-input ms-auto" type="checkbox" id="newsletterCheck"
                               @(isSubscribed ? "checked" : "")>
                        <label class="form-check-label text-body ms-3 text-truncate w-80 mb-0" for="newsletterCheck">
                            Bültene abone ol
                        </label>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById("newsletterCheck").addEventListener("change", function () {
        fetch('/Member/Newslatter/ToggleSubscription', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(this.checked)
        })
        .then(res => res.json())
        .then(data => {
            Swal.fire({
                icon: data.success ? 'success' : 'error',
                title: data.message,
                confirmButtonText: 'Tamam'
            });
        })
        .catch(err => {
            Swal.fire({
                icon: 'error',
                title: 'Bir hata oluştu!',
                confirmButtonText: 'Tamam'
            });
        });
    });
</script>